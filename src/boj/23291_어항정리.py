n, k = map(int, input().split())
a = list(map(int, input().split()))
ans = 0

while max(a) - min(a) > k:
    ans += 1

    # 물고기의 수가 가장 적은 어항에 물고기를 넣는다.
    minfish = min(a)
    a = list(map(lambda x: x + 1 if x == minfish else x))

    # 공중 부양 1
    # 가장 왼쪽에 있는 어항을 그 어항의 오른쪽에 있는 어항의 위에 올려 놓는다.
    # 2개 이상 쌓여있는 어항을 90도 회전시키고, 바닥에 있는 어항에 올려놓는다.
    # 종료 조건 : 바닥에 있는 어항의 열 < 공중부양시킨 어항 행
    board = [[] for _ in range(n)]
    board[0] = a[1:]
    board[1] = [a[0]]
    cnt = 1
    while len(board) <= len(board[0]) - cnt:

# 물고기 수 조절
# 모든 인접한 두 어항에 대해서 물고기 수의 차이를 구한다.
# d = 차이 / 5 라고할 때, d > 0 이면, 물고기가 많은 곳에서 적은 곳으로 d마리 보낸다.

# 어항을 바닥에 일렬로 놓는다.
# 가장 왼쪽에 있는 어항부터, 그리고 아래에 있는 어항부터 가장 위에 있는 어항까지 순서대로 바닥에 놓는다.

# 공중 부양 2
# 가운데를 중심으로 왼쪽 반절을 시계 방향으로 180도 회전시키고, 나머지 위에 올린다.
# 같은 작업을 두 번 반복한다.

# 어항을 바닥에 일렬로 놓는다.

print(ans)
