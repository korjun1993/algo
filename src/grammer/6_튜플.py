a = (1, 2, 3, 4, 5, 6, 7, 8, 9)

# 네 번째 원소만 출력
print(a[3])

# 두 번째 원소부터 네 번째 원소까지
print(a[1:4])

a = (1, 2, 3, 4)

# 튜플은 변경 불가능
a[2] = 7


# 튜플을 사용하면 좋은 경우

# 1. 서로 다른 성질의 데이터를 묶어서 관리해야할 때
# 최단 경로 알고리즘에서는 (비용, 노드 번호)의 형태로 튜플 자료형을 자주 사용합니다.

# 2. 데이터의 나열을 해싱의 키 값으로 사용해야할 때
# 튜플은 변경이 불그낭하므로 리스트와 다르게 키 값으로 사용될 수 있습니다.

# 3. 리스트보다 메모리를 효율적으로 사용해야할 때